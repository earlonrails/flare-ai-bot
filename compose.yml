services:
  ai-tee:
    build:
      context: ./ai
      dockerfile: ./Dockerfile
    container_name: ai_tee
    volumes:
      - ./ai:/app/ai
    environment:
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
    ports:
      - "5000:5000"
    networks:
      - kinetic_net
    depends_on:
      - blockchain

  # Blockchain Service (Web3.py + Kinetic Integration)
  blockchain:
    build:
      context: ./blockchain
      dockerfile: ./Dockerfile
    container_name: blockchain_service
    volumes:
      - ./blockchain:/app/blockchain
    environment:
      - FLARE_RPC_URL=https://coston2-api.flare.network/ext/C/rpc  # Coston2 testnet RPC
      - FTSO_ENDPOINT=https://coston2-ftso.flare.network  # Testnet FTSO (placeholder)
      - PRIVATE_KEY=${PRIVATE_KEY}
      - KINETIC_CONTRACT_ADDRESS=${KINETIC_CONTRACT_ADDRESS}
    ports:
      - "8000:8000"
    networks:
      - kinetic_net

  frontend:
    build:
      context: ./frontend
      dockerfile: ./Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app/frontend
    networks:
      - kinetic_net

  telegram:
    build:
      context: ./telegram
      dockerfile: ./Dockerfile
    container_name: telegram
    volumes:
      - ./telegram:/app/telegram
    environment:
      - TELEGRAM_TOKEN=${TELEGRAM_TOKEN}
      - AI_API_URL=http://ai-tee:5000/parse
      - BLOCKCHAIN_API_URL=http://blockchain_service:8000/execute
    networks:
      - kinetic_net
    depends_on:
      - ai-tee
      - blockchain

networks:
  kinetic_net:
    driver: bridge
